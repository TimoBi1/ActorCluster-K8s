akka {

	actor {
 		provider = "cluster"
 	}
 	remote {
		log-remote-lifecycle-events = off
		netty.tcp {
			#hostname = ${HOSTNAME}
			hostname = 172.20.1.19
			port = 25520
 		}
 	}

 	scheduler {
 		tick-duration = 33ms
 	}
	
	discovery {
		ServiceDiscovery {
		  kubernetes-api {
		    # Namespace discovery path
		    #
		    # If this path doesn't exist, the namespace will default to "default".
		    #pod-namespace-path = "/var/run/secrets/kubernetes.io/serviceaccount/namespace"
		
		    # Namespace to query for pods.
		    #
		    # Set this value to a specific string to override discovering the namespace using pod-namespace-path.
		    pod-namespace = "akka"
		
		    # Selector value to query pod API with.
		    # `%s` will be replaced with the configured effective name, which defaults to the actor system name
		    #pod-label-selector = "app=%s"
	    }
	  }
	}
	
 	#management-config
    management {
      cluster.bootstrap {
        contact-point-discovery {
          # pick the discovery method you'd like to use:
           discovery-method = kubernetes-api
        }
      }
    }

 	extensions = [
 		"akka.cluster.pubsub.DistributedPubSub"
 	]
 	log-dead-letters = 0
 	extensions = ["akka.management.cluster.bootstrap.ClusterBootstrap"]
 	jvm-exit-on-fatal-error = off
}
